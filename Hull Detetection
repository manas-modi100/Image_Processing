import cv2
import numpy as np
def nothing(x):
    pass
capture = cv2.VideoCapture(0)
cv2.namedWindow('Tracking')
cv2.createTrackbar('LH', 'Tracking', 0, 255, nothing)
cv2.createTrackbar('LS', 'Tracking', 0, 255, nothing)
cv2.createTrackbar('LV', 'Tracking', 0, 255, nothing)
cv2.createTrackbar('UH', 'Tracking', 255, 255, nothing)
cv2.createTrackbar('US', 'Tracking', 255, 255, nothing)
cv2.createTrackbar('UV', 'Tracking', 255, 255, nothing)
while capture.isOpened():
    ret, frame = capture.read()
    hsv = cv2.cvtColor(frame, cv2.COLOR_BGR2HSV)
    lh = cv2.getTrackbarPos('LH', 'Tracking')
    ls = cv2.getTrackbarPos('LS', 'Tracking')
    lv = cv2.getTrackbarPos('LH', 'Tracking')
    uh = cv2.getTrackbarPos('UH', 'Tracking')
    us = cv2.getTrackbarPos('US', 'Tracking')
    uv = cv2.getTrackbarPos('UV', 'Tracking')

    lb = np.array([lh, ls, lv])
    ub = np.array([uh, us, uv])
    #lb = np.array([0, 30, 60])
    #ub = np.array([20, 150, 255])
    mask = cv2.inRange(hsv, lb, ub)
    kernel = np.ones((3, 3), np.uint8)
    mask = cv2.morphologyEx(mask, cv2.MORPH_OPEN, kernel)
    contours, hierarchy = cv2.findContours(mask, cv2.RETR_TREE, cv2.CHAIN_APPROX_SIMPLE)
    res = cv2.bitwise_and(frame, frame, mask=mask)
    hull = []
    for i in range(len(contours)):
        hull.append(cv2.convexHull(contours[i]))
    for i in range(len(contours)):
        cv2.drawContours(res, contours, i, (0, 255, 0), 1, 8, hierarchy)
        cv2.drawContours(res, hull, i, (0, 255, 255), 1, 8)
    cv2.imshow('frame', frame)
    cv2.imshow('mask', mask)
    cv2.imshow('Tracking', res)
    if cv2.waitKey(30) == 27:
        break
capture.release()
cv2.destroyAllWindows()
